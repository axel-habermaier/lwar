//using System;

//namespace Lwar
//{
//	using System.Runtime.CompilerServices;
//	using Gameplay.Entities;
//	using Pegasus.Framework.Rendering.UserInterface;



//	internal interface IObservableList<T>
//	{
//	}

//	// defined in assets project
//	internal interface IScoreboardViewModel 
//	{
//		/// <summary>
//		///   Rank of the local player
//		/// </summary>
//		int Rank { get; }

//		IObservableList<IPlayerInfo> PlayerInfo { get; }
//	}

//	internal interface IPlayerInfo 
//	{
//		int Deaths { get; }
//		int Kills { get; }
//		int Ping { get; }
//		string Name { get; }
//	}


//	// Generated by asset compiler
//	internal partial class ScoreboardViewModel : IScoreboardViewModel
//	{
//		private IObservableList<IPlayerInfo> _playerInfos;
//		private int _rank;

//		/// <summary>
//		///   Rank of the local player
//		/// </summary>
//		public int Rank
//		{
//			get { return _rank; }
//			set
//			{
//				if (_rank == value)
//					return;

//				_rank = value;
//				OnRankChanged(value, value);
//			}
//		}

//		partial void OnRankChanged(int oldValue, int newValue);

//		public IObservableList<IPlayerInfo> PlayerInfo
//		{
//			get { return _playerInfos; }
//			set
//			{
//				if (_playerInfos == value)
//					return;

//				_playerInfos = value;
//				OnPlayerInfoChanged(value, value);
//			}
//		}

//		partial void OnPlayerInfoChanged(IObservableList<IPlayerInfo> oldValue, IObservableList<IPlayerInfo> newValue);
//	}

//	// Generated by asset compiler
//	internal class ScoreboardView : Control
//	{
//		public ScoreboardView(IScoreboardViewModel viewModel)
//		{
//			DataContext = viewModel;

//			var list = new ItemsSource();
//			list.ItemsTemplate = new Template()
//			{
//				Content = new StackPanel()
//				{
//					new Label
//					{
//						Text = new Binding
//						{
//							SourceValue = s => ((IPlayerInfo)s).Kills
//						}
//					}
//				}
//			};
//			list.Items = new Binding()
//			{
//				TargetObject = list,
//				TargetProperty = ItemsSouce.ItemsProperty,
//				SourceObject = DataContext,
//				SourcePath = s => ((IScoreboardViewModel)s).PlayerInfo

//			};

//			Content = list;
//		}
//	}

//	// Viewmodel written by user
//	partial class ScoreboardViewModel
//	{
//		partial void OnRankChanged(int oldValue, int newValue)
//		{
			
//		}
//	}
//}