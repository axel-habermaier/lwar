<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".asm" encoding="us-ascii" #>
<# var interfaces = GetInterfaces(); #>
<# foreach (var comInterface in interfaces) { #>
.class private sequential ansi sealed beforefieldinit Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>
	extends [System.Runtime]System.ValueType
{
	.pack 0
	.size 0

	.field public native int Object

	.property instance bool IsInitialized()
	{
		.get instance bool Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::get_IsInitialized()
	}

	.method public hidebysig specialname instance bool get_IsInitialized () cil managed
	{
		.maxstack 4

		ldarg.0
		ldfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
		ldc.i4.0
		conv.i
		ceq
		ldc.i4.0
		ceq
		ret
	}

	.method public hidebysig instance void Release () cil managed 
	{
		.maxstack 4

		ldc.i4.0
		conv.i
		ldarg.0
		ldfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
		beq.s IL_ret

		ldarg.0
		ldfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
		dup
		ldind.i
		ldc.i4.s 2
		conv.i
		sizeof void*
		mul
		add
		ldind.i
		calli unmanaged stdcall uint32(native int)
		pop

		ldarg.0
		ldc.i4.0
		conv.i
		stfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object

		IL_ret: ret
	}

<# if (comInterface.CanBeNamed) { #>
	.method public hidebysig instance void SetDebugName (string name) cil managed 
	{
		.maxstack 8
		.locals init (
			[0] native int,
			[1] valuetype [System.Runtime]System.Guid
		)

		ldarg.1
		call native int [System.Runtime.InteropServices]System.Runtime.InteropServices.Marshal::StringToHGlobalAnsi(string)
		stloc.0
		ldsfld valuetype [System.Runtime]System.Guid Pegasus.Platform.Graphics.Direct3D11.Bindings.D3D11Guid::DebugObjectName
		stloc.1
		ldarg.0
		ldfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
		ldloca.s 1
		ldarg.1
		callvirt instance int32 [System.Runtime]System.String::get_Length()
		ldloc.0
		ldarg.0
		ldfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
		ldind.i
		ldc.i4.s 5
		conv.i
		sizeof void*
		mul
		add
		ldind.i
		calli unmanaged stdcall int32(native int, native int, int32, native int)
		pop
		ldloc.0
		call void [System.Runtime.InteropServices]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
		ret
	} 

<# } #>
<# foreach (var method in comInterface.Methods) { #>
	.method public hidebysig instance <#= method.ReturnType #> <#= method.Name #> (<#= String.Join(", ", method.Parameters.Select(p => p.ParameterDefinition)) #>) cil managed aggressiveinlining
	{
		.maxstack <#= 4 + method.Parameters.Length #>

		ldarg.0
		ldfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
<# for (var i = 0; i < method.Parameters.Length; ++i) { #>
		ldarg <#= i + 1 #>
<# } #>
		ldarg.0
		ldfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
		ldind.i
		ldc.i4.s <#= method.Offset #>
		conv.i
		sizeof void*
		mul
		add
		ldind.i
		calli unmanaged stdcall <#= method.ReturnType #>(native int<#= method.Parameters.Length > 0 ? ", " : "" #><#= String.Join(", ", method.Parameters.Select(p => p.Type)) #>)
		ret
	}

<# } #>
<# foreach (var type in comInterface.ConvertFrom) { #>
	.method public hidebysig specialname static valuetype Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #> op_Implicit (<#= type #> val) cil managed 
	{
		.maxstack 8
		.locals init (
			[0] valuetype Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #> obj
		)

		ldloca.s 0
		initobj valuetype Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>
		ldloca.s 0
		ldarg.0
		ldfld native int <#= type #>::Object
		stfld native int Pegasus.Platform.Graphics.Direct3D11.Bindings.<#= comInterface.Name #>::Object
		ldloc.0
		ret
	}

<# } #>
}

<# } #>
<#+
struct ComInterface
{
	public string Name;
	public ComMethod[] Methods;
	public string[] ConvertFrom;
	public bool CanBeNamed;

	public ComInterface(string name, params ComMethod[] methods)
	{
		Name = name;
		Methods = methods;
		ConvertFrom = new string[0];
		CanBeNamed = true;
	}
}

struct ComMethod
{
	public string Name;
	public int Offset;
	public string ReturnType;
	public Parameter[] Parameters;

	public ComMethod(string name, int offset, string returnType, params Parameter[] parameters)
	{
		Name = name;
		Offset = offset;
		ReturnType = MapType(returnType);
		Parameters = parameters;
	}
}

struct Parameter
{
	public string Name;
	public string Type;

	public string ParameterDefinition
	{
		get { return String.Format("{0} {1}", Type, Name); }
	}

	public Parameter(string name, string type)
	{
		Name = name;
		Type = MapType(type);
	}
}

static string MapType(string type)
{
	if (type.StartsWith("D3D11") || type.StartsWith("DXGI"))
		return "valuetype Pegasus.Platform.Graphics.Direct3D11.Bindings." + type;

	if (type.StartsWith("valuetype D3D11") || type.StartsWith("valuetype DXGI"))
	{
		type = type.Substring("valuetype ".Length);
		return "valuetype Pegasus.Platform.Graphics.Direct3D11.Bindings." + type;
	}

	if (type.StartsWith("[out] valuetype D3D11") || type.StartsWith("[out] valuetype DXGI"))
	{
		type = type.Substring("[out] valuetype ".Length);
		return "[out] valuetype Pegasus.Platform.Graphics.Direct3D11.Bindings." + type;
	}

	return type;
}

ComInterface[] GetInterfaces()
{
	return new[] 
	{
		new ComInterface("D3D11Device",
			new ComMethod("QueryInterface", 0, "D3D11Result",
				new Parameter("id", "void*"),
				new Parameter("obj", "void*")),
			new ComMethod("GetFeatureLevel", 37, "valuetype D3D11FeatureLevel"),
			new ComMethod("CreateBlendState", 20, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11BlendStateDescription&"),
				new Parameter("state", "[out] valuetype D3D11BlendState&")),
			new ComMethod("CreateDepthStencilState", 21, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11DepthStencilStateDescription&"),
				new Parameter("state", "[out] valuetype D3D11DepthStencilState&")),
			new ComMethod("CreateRasterizerState", 22, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11RasterizerStateDescription&"),
				new Parameter("state", "[out] valuetype D3D11RasterizerState&")),
			new ComMethod("CreateSamplerState", 23, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11SamplerStateDescription&"),
				new Parameter("state", "[out] valuetype D3D11SamplerState&")),
			new ComMethod("CreateQuery", 24, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11QueryDescription&"),
				new Parameter("query", "[out] valuetype D3D11Query&")),
			new ComMethod("CreateBuffer", 3, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11BufferDescription&"),
				new Parameter("data", "valuetype D3D11SubResourceData*"),
				new Parameter("buffer", "[out] valuetype D3D11Buffer&")),
			new ComMethod("CreateInputLayout", 11, "D3D11Result", 
				new Parameter("inputs", "valuetype D3D11InputElement*"),
				new Parameter("numInputs", "int32"),
				new Parameter("signatureShader", "void*"),
				new Parameter("shaderSize", "valuetype D3D11PointerSize"),
				new Parameter("inputLayout", "[out] valuetype D3D11InputLayout&")),
			new ComMethod("CreatePixelShader", 15, "D3D11Result", 
				new Parameter("byteCode", "void*"),
				new Parameter("byteCodeSize", "valuetype D3D11PointerSize"),
				new Parameter("linkage", "valuetype D3D11ClassLinkage"),
				new Parameter("shader", "[out] valuetype D3D11PixelShader&")),
			new ComMethod("CreateVertexShader", 12, "D3D11Result", 
				new Parameter("byteCode", "void*"),
				new Parameter("byteCodeSize", "valuetype D3D11PointerSize"),
				new Parameter("linkage", "valuetype D3D11ClassLinkage"),
				new Parameter("shader", "[out] valuetype D3D11VertexShader&")),
			new ComMethod("CreateRenderTargetView", 9, "D3D11Result", 
				new Parameter("resource", "valuetype D3D11Resource"),
				new Parameter("desc", "valuetype D3D11RenderTargetViewDescription*"),
				new Parameter("view", "[out] valuetype D3D11RenderTargetView&")),
			new ComMethod("CreateDepthStencilView", 10, "D3D11Result", 
				new Parameter("resource", "valuetype D3D11Resource"),
				new Parameter("desc", "valuetype D3D11DepthStencilViewDescription*"),
				new Parameter("view", "[out] valuetype D3D11DepthStencilView&")),
			new ComMethod("CreateShaderResourceView", 7, "D3D11Result", 
				new Parameter("resource", "valuetype D3D11Resource"),
				new Parameter("desc", "valuetype D3D11ShaderResourceViewDescription&"),
				new Parameter("view", "[out] valuetype D3D11ShaderResourceView&")),
			new ComMethod("CreateTexture1D", 4, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11Texture1DDescription&"),
				new Parameter("data", "valuetype D3D11SubResourceData*"),
				new Parameter("texture", "[out] valuetype D3D11Resource&")),
			new ComMethod("CreateTexture2D", 5, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11Texture2DDescription&"),
				new Parameter("data", "valuetype D3D11SubResourceData*"),
				new Parameter("texture", "[out] valuetype D3D11Resource&")),
			new ComMethod("CreateTexture3D", 6, "D3D11Result", 
				new Parameter("desc", "valuetype D3D11Texture3DDescription&"),
				new Parameter("data", "valuetype D3D11SubResourceData*"),
				new Parameter("texture", "[out] valuetype D3D11Resource&"))
		) { CanBeNamed = false },
		new ComInterface("DXGIFactory",
			new ComMethod("EnumAdapters", 7, "D3D11Result",
				new Parameter("index", "int32"),
				new Parameter("adapter", "valuetype DXGIAdapter*")),
			new ComMethod("CreateSwapChain", 10, "D3D11Result",
				new Parameter("device", "valuetype D3D11Device"),
				new Parameter("desc", "valuetype DXGISwapChainDescription*"),
				new Parameter("swapChain", "valuetype DXGISwapChain*")),
			new ComMethod("MakeWindowAssociation", 8, "D3D11Result",
				new Parameter("hwnd", "native int"),
				new Parameter("windowFlags", "valuetype DXGIWindowAssociationFlags"))
		) { CanBeNamed = false },
		new ComInterface("DXGIAdapter",
			new ComMethod("GetDesc", 8, "D3D11Result",
				new Parameter("desc", "valuetype DXGIAdapterDescription*"))
		) { CanBeNamed = false },
		new ComInterface("DXGISwapChain",
			new ComMethod("Present", 8, "D3D11Result",
				new Parameter("syncInterval", "int32"),
				new Parameter("presentFlags", "valuetype DXGIPresentFlags")),
			new ComMethod("ResizeBuffers", 13, "D3D11Result",
				new Parameter("bufferCount", "int32"),
				new Parameter("width", "int32"),
				new Parameter("height", "int32"),
				new Parameter("format", "valuetype DXGIFormat"),
				new Parameter("swapChainFlags", "valuetype DXGISwapChainFlags")),
			new ComMethod("GetBuffer", 9, "D3D11Result",
				new Parameter("buffer", "int32"),
				new Parameter("id", "void*"),
				new Parameter("surface", "[out] valuetype D3D11Resource&"))
		) { CanBeNamed = false },
		new ComInterface("DXGIDebug",
			new ComMethod("ReportLiveObjects", 3, "D3D11Result",
				new Parameter("apiId", "valuetype [System.Runtime]System.Guid"),
				new Parameter("level", "valuetype D3D11ReportingLevel"))
		),
		new ComInterface("D3D11BlendState"),
		new ComInterface("D3D11DepthStencilState"),
		new ComInterface("D3D11RasterizerState"),
		new ComInterface("D3D11SamplerState"),
		new ComInterface("D3D11Buffer"),
		new ComInterface("D3D11InputLayout"),
		new ComInterface("D3D11PixelShader"),
		new ComInterface("D3D11VertexShader"),
		new ComInterface("D3D11ClassInstance"),
		new ComInterface("D3D11ClassLinkage") { CanBeNamed = false },
		new ComInterface("D3D11Query"),
		new ComInterface("D3D11RenderTargetView"),
		new ComInterface("D3D11DepthStencilView"),
		new ComInterface("D3D11ShaderResourceView"),
		new ComInterface("D3D11Resource") 
		{ 
			ConvertFrom = new [] 
			{ 
				"valuetype Pegasus.Platform.Graphics.Direct3D11.Bindings.D3D11Buffer",
			}
		},
		new ComInterface("D3D11DeviceContext",
			new ComMethod("Begin", 27, "void",
				new Parameter("query", "valuetype D3D11Query")),
			new ComMethod("End", 28, "void",
				new Parameter("query", "valuetype D3D11Query")),
			new ComMethod("GetData", 29, "D3D11Result",
				new Parameter("query", "valuetype D3D11Query"),
				new Parameter("data", "void*"),
				new Parameter("size", "int32"),
				new Parameter("dataFlags", "D3D11QueryFlags")),
			new ComMethod("OMSetBlendState", 35, "void",
				new Parameter("state", "valuetype D3D11BlendState"),
				new Parameter("blendFactor", "float32*"),
				new Parameter("sampleMask", "uint32")),
			new ComMethod("OMSetRenderTargets", 33, "void",
				new Parameter("numViews", "int32"),
				new Parameter("renderTargetViews", "valuetype D3D11RenderTargetView*"),
				new Parameter("depthStencilView", "valuetype D3D11DepthStencilView")),
			new ComMethod("OMSetDepthStencilState", 36, "void",
				new Parameter("state", "valuetype D3D11DepthStencilState"),
				new Parameter("stencilRef", "uint32")),
			new ComMethod("RSSetState", 43, "void",
				new Parameter("state", "valuetype D3D11RasterizerState")),
			new ComMethod("RSSetViewports", 44, "void",
				new Parameter("numViewports", "int32"),
				new Parameter("viewports", "valuetype D3D11Viewport*")),
			new ComMethod("RSSetScissorRects", 45, "void",
				new Parameter("numRects", "int32"),
				new Parameter("rects", "valuetype D3D11Rectangle*")),
			new ComMethod("VSSetShader", 11, "void",
				new Parameter("shader", "valuetype D3D11VertexShader"),
				new Parameter("instances", "valuetype D3D11ClassInstance*"),
				new Parameter("numInstances", "int32")),
			new ComMethod("VSSetSamplers", 26, "void",
				new Parameter("startSlot", "int32"),
				new Parameter("numSamplers", "int32"),
				new Parameter("states", "valuetype D3D11SamplerState*")),
			new ComMethod("VSSetConstantBuffers", 7, "void",
				new Parameter("startSlot", "int32"),
				new Parameter("numBuffers", "int32"),
				new Parameter("buffers", "valuetype D3D11Buffer*")),
			new ComMethod("VSSetShaderResources", 25, "void",
				new Parameter("startSlot", "int32"),
				new Parameter("numViews", "int32"),
				new Parameter("views", "valuetype D3D11ShaderResourceView*")),
			new ComMethod("PSSetShader", 9, "void",
				new Parameter("shader", "valuetype D3D11PixelShader"),
				new Parameter("instances", "valuetype D3D11ClassInstance*"),
				new Parameter("numInstances", "int32")),
			new ComMethod("PSSetSamplers", 10, "void",
				new Parameter("startSlot", "int32"),
				new Parameter("numSamplers", "int32"),
				new Parameter("states", "valuetype D3D11SamplerState*")),
			new ComMethod("PSSetConstantBuffers", 16, "void",
				new Parameter("startSlot", "int32"),
				new Parameter("numBuffers", "int32"),
				new Parameter("buffers", "valuetype D3D11Buffer*")),
			new ComMethod("PSSetShaderResources", 8, "void",
				new Parameter("startSlot", "int32"),
				new Parameter("numViews", "int32"),
				new Parameter("views", "valuetype D3D11ShaderResourceView*")),
			new ComMethod("IASetInputLayout", 17, "void",
				new Parameter("layout", "valuetype D3D11InputLayout")),
			new ComMethod("IASetPrimitiveTopology", 24, "void",
				new Parameter("topology", "valuetype D3D11PrimitiveTopology")),
			new ComMethod("IASetVertexBuffers", 18, "void",
				new Parameter("startSlot", "int32"),
				new Parameter("numBuffers", "int32"),
				new Parameter("buffers", "valuetype D3D11Buffer*"),
				new Parameter("strides", "int32*"),
				new Parameter("offsets", "int32*")),
			new ComMethod("IASetIndexBuffer", 19, "void",
				new Parameter("buffer", "valuetype D3D11Buffer"),
				new Parameter("format", "valuetype DXGIFormat"),
				new Parameter("offset", "int32")),
			new ComMethod("Unmap", 15, "void",
				new Parameter("resource", "valuetype D3D11Resource"),
				new Parameter("subResource", "int32")),
			new ComMethod("Map", 14, "D3D11Result",
				new Parameter("resource", "valuetype D3D11Resource"),
				new Parameter("subResource", "int32"),
				new Parameter("mapMode", "valuetype D3D11MapMode"),
				new Parameter("mapFlags", "valuetype D3D11MapFlags"),
				new Parameter("mappedResource", "valuetype D3D11SubResourceData*")),
			new ComMethod("GenerateMips", 54, "void",
				new Parameter("view", "valuetype D3D11ShaderResourceView")),
			new ComMethod("ClearRenderTargetView", 50, "void",
				new Parameter("view", "valuetype D3D11RenderTargetView"),
				new Parameter("color", "float32*")),
			new ComMethod("ClearDepthStencilView", 53, "void",
				new Parameter("view", "valuetype D3D11DepthStencilView"),
				new Parameter("clearFlags", "valuetype D3D11DepthStencilClearFlags"),
				new Parameter("depth", "float32"),
				new Parameter("stencil", "uint8")),
			new ComMethod("Draw", 13, "void",
				new Parameter("vertexCount", "int32"),
				new Parameter("vertexOffset", "int32")),
			new ComMethod("DrawInstanced", 21, "void",
				new Parameter("vertexCount", "int32"),
				new Parameter("instanceCount", "int32"),
				new Parameter("vertexOffset", "int32"),
				new Parameter("instanceOffset", "int32")),
			new ComMethod("DrawIndexed", 12, "void",
				new Parameter("indexCount", "int32"),
				new Parameter("indexOffset", "int32"),
				new Parameter("vertexOffset", "int32")),
			new ComMethod("DrawIndexedInstanced", 20, "void",
				new Parameter("indexCount", "int32"),
				new Parameter("instanceCount", "int32"),
				new Parameter("indexOffset", "int32"),
				new Parameter("vertexOffset", "int32"),
				new Parameter("instanceOffset", "int32")),
			new ComMethod("ClearState", 110, "void"),
			new ComMethod("Flush", 111, "void")
		) { CanBeNamed = false }
	};
}
#>